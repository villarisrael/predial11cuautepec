using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using Predial_7.Resources.CODE;

namespace Predial_7.AccesoSistema
{
    public partial class FrmAcceso : DevComponents.DotNetBar.Office2007Form
    {
        Predial_7.Resources.CODE.Seguridad Encriptar = new Seguridad();
        string UsuarioEncripatado, PasswordEncriptado, Usuario, Password, Status;
        DataTable TBL_Consulta = new DataTable();

        public FrmAcceso()
        {
            InitializeComponent();
        }

        private void FrmAcceso_Load(object sender, EventArgs e)
        {
            Conexion_a_BD.Conectar();
            lblEmpresa.Text = Conexion_a_BD.obtenercampo("select CNOMBRE from empresa");
            Conexion_a_BD.Desconectar();
        }

        private void btnAceptar_Click(object sender, EventArgs e)
        {
            if (txtUsuario.Text == "" && txtPassword.Text == "")
            {
                MessageBox.Show("Ingresa el Usuario y contraseña", "Información", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
            }
            else
            {               
                UsuarioEncripatado = Encriptar.Encriptar(txtUsuario.Text);
                PasswordEncriptado = Encriptar.Encriptar(txtPassword.Text);

                try
                {
                    Conexion_a_BD.Conectar();
                    Usuario = Conexion_a_BD.obtenercampo("Select User from letras_p where User='"+UsuarioEncripatado+"';");
                    Conexion_a_BD.Desconectar();

                    Conexion_a_BD.Conectar();
                    Password = Conexion_a_BD.obtenercampo("Select Password from letras_p where User='" + UsuarioEncripatado + "';");
                    Conexion_a_BD.Desconectar();

                    Conexion_a_BD.Conectar();
                    Status = Conexion_a_BD.obtenercampo("Select Status from letras_p where User='" + UsuarioEncripatado + "' and Password='" + PasswordEncriptado + "';");
                    Conexion_a_BD.Desconectar();

                   

                    if (UsuarioEncripatado == Usuario && PasswordEncriptado == Password && Status == "True")
                    {
                        string IDUSU = Conexion_a_BD.obtenercampo("SELECT IDUSER from letras_p WHERE User='" + UsuarioEncripatado +  "';");
                        Predial_7.Principal programa = new Predial_7.Principal();
                        Determinamenu(IDUSU,programa );
                    
                        programa.ShowDialog ();
                        this.Visible = false;
                    }
                    else
                    {
                        if (UsuarioEncripatado == Usuario && PasswordEncriptado == Password && Status == "0")
                        {
                            MessageBox.Show("Usuario sin permiso", "Información", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        }
                        else
                        {
                            MessageBox.Show("Usuario y/o Password incorrectos", "Información", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        }
                    }
                }
                catch (Exception err)
                {
                    MessageBox.Show(err.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
            
        }

        private void btnCancelar_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        public void Determinamenu(string _id, Predial_7.Principal _programa)
        {
            Conexion_a_BD.Conectar();
            TBL_Consulta = Conexion_a_BD.Consultasql("*", "arbol_P where id2 =" + _id);
            Conexion_a_BD.Desconectar();
            var resultado = from myRow in TBL_Consulta.AsEnumerable() select myRow;

            Seguridad seg = new Seguridad();
            try
            {
                DataView view = resultado.AsDataView();

                for (int il = 0; il <= view.Count - 1; il++)
                {
                    string campo = seg.Desencriptar(view[il]["ido"].ToString());
                    string que = view[il]["idv"].ToString();



                   
                    for (int i = 0; i <= _programa.menu.Items.Count - 1; i++)
                    {
                        DevComponents.DotNetBar.RibbonTabItem tabuladores = new DevComponents.DotNetBar.RibbonTabItem();
                        tabuladores = (DevComponents.DotNetBar.RibbonTabItem)_programa.menu.Items[i];
                        for (int j = tabuladores.Panel.Controls.Count - 1; j >= 0; j--)
                        {
                            DevComponents.DotNetBar.RibbonBar barras = new DevComponents.DotNetBar.RibbonBar();
                            barras = (DevComponents.DotNetBar.RibbonBar)tabuladores.Panel.Controls[j];

                            for (int k = barras.Items.Count; k >= 0; k--)
                            {

                                DevComponents.DotNetBar.ButtonItem boton = new DevComponents.DotNetBar.ButtonItem();
                                try
                                {
                                    boton = (DevComponents.DotNetBar.ButtonItem)barras.Items[k];
                                    if (campo == boton.Tooltip)
                                    {
                                        if (que == "1")
                                        {
                                            boton.Enabled  = true;
                                        }
                                        else
                                        {
                                            boton.Enabled   = false;
                                        }
                                    }
                                  

                                }
                                catch (Exception err)
                                {
                                }
                            }
                        }
                    }




                }

            }
            catch (Exception err)
            {
            }
        }
    }
}
